import{_ as t,r as s,o as r,c as i,a as e,b as d,d as n,e as o}from"./app-80646ede.js";const h="/assets/image-20230528142922441-269b1905.png",c="/assets/image-20230528143447679-9bde3cb0.png",p="/assets/image-20230528144448544-150a1efa.png",l="/assets/image-20230528144914005-170e14b8.png",g="/assets/image-20230528140038315-31e22e28.png",m="/assets/image-20230528140812555-14c7b748.png",f="/assets/image-20230528140959674-1a6524e7.png",b={},u=o('<h1 id="stun-session-traversal-utilities-for-nat" tabindex="-1"><a class="header-anchor" href="#stun-session-traversal-utilities-for-nat" aria-hidden="true">#</a> STUN (Session Traversal Utilities for NAT</h1><p>​ <strong>帮助NAT后面的设备发现其在公共网络中的IP地址和端口号，以便其他对等节点可以直接与其通信。</strong></p><h2 id="协议详解-rfc5389" tabindex="-1"><a class="header-anchor" href="#协议详解-rfc5389" aria-hidden="true">#</a> 协议详解（RFC5389）</h2><h3 id="format-of-stun-message-header" tabindex="-1"><a class="header-anchor" href="#format-of-stun-message-header" aria-hidden="true">#</a> Format of STUN Message Header</h3><p><img src="'+h+'" alt="image-20230528142922441"></p><h4 id="message-type-前16bit" tabindex="-1"><a class="header-anchor" href="#message-type-前16bit" aria-hidden="true">#</a> Message Type（前16bit）</h4><p>两位00用于区分复用同一端口时STUN协议</p><p><img src="'+c+'" alt="image-20230528143447679"></p><p><img src="'+p+'" alt="image-20230528144448544"></p><blockquote><p>C0C1：A class of 0b00 is a request, a class of 0b01 is an indication, a class of 0b10 is a success response, and a class of 0b11 is an error response.</p><p>a Binding request has class=0b00 (request) and method=0b000000000001 (Binding) and is encoded into the first 16 bits as 0x0001. A Binding response has class=0b10 (success response) and method=0b000000000001, and is encoded into the first 16 bits as 0x0101.</p></blockquote><h4 id="message-length" tabindex="-1"><a class="header-anchor" href="#message-length" aria-hidden="true">#</a> Message Length</h4><p>不包括消息头</p><h4 id="magic-cookie" tabindex="-1"><a class="header-anchor" href="#magic-cookie" aria-hidden="true">#</a> Magic cookie</h4><p>固定为0x2112A442</p><h4 id="transaction-id" tabindex="-1"><a class="header-anchor" href="#transaction-id" aria-hidden="true">#</a> Transaction ID</h4><p>事务ID，标识了同一个事务的请求和响应</p><h3 id="消息体" tabindex="-1"><a class="header-anchor" href="#消息体" aria-hidden="true">#</a> 消息体</h3><p>包含多个Attributes</p><p><img src="'+l+'" alt="image-20230528144914005"></p><h4 id="mapped-address" tabindex="-1"><a class="header-anchor" href="#mapped-address" aria-hidden="true">#</a> MAPPED-ADDRESS</h4><p><strong>获取客户端映射地址</strong>，服务端发给客户端</p><h4 id="change-request" tabindex="-1"><a class="header-anchor" href="#change-request" aria-hidden="true">#</a> CHANGE-REQUEST</h4><p>请求服务端使用不同的IP和端口发送请求</p><h4 id="changed-address" tabindex="-1"><a class="header-anchor" href="#changed-address" aria-hidden="true">#</a> CHANGED-ADDRESS</h4><p>CHANGE-REQUEST的响应</p><h2 id="nat类型检测" tabindex="-1"><a class="header-anchor" href="#nat类型检测" aria-hidden="true">#</a> NAT类型检测</h2><ol><li>判断有无 NAT</li></ol><img src="'+g+'" alt="image-20230528140038315" style="zoom:33%;"><p>在服务端的返回消息里记录着主机的公网 IP 地址，所以当主机收到服务端响应后，它要判断带回的公网 IP 地址是否与自己本地的 IP 地址一致，以此判断主机是否在 NAT 之后。</p><ol start="2"><li>判断是否为完全锥或对称型</li></ol><img src="'+m+'" alt="image-20230528140812555" style="zoom:33%;"><p>如果能收到，在服务端的返回消息里记录着主机的公网 IP 地址，<strong>如果和第一次的公网 IP 地址不一致，则是对称型，如果一致，是完全锥</strong></p><ol start="3"><li>判断是否为限制锥</li></ol><img src="'+f+'" alt="image-20230528140959674" style="zoom:33%;"><p>如果能收到，则是限制锥形，如果不能收到，则是端口受限</p><h2 id="利用stun打通" tabindex="-1"><a class="header-anchor" href="#利用stun打通" aria-hidden="true">#</a> 利用STUN打通</h2><p>pc1 和 pc2 打通的过程</p><ol><li>pc1 和 pc2 向 STUN 发消息，STUN 拿到 pc1 和 pc2 的公网 ip 和 port</li><li>STUN 将 pc1 的公网 ip 和 port 交给 c2，将 pc2 的公网 ip 和 port 交给 pc1</li><li>根据类型进行打通</li></ol><p>对于完全锥型，现在已经可以互通了</p><p>对于限制锥型和端口限制锥型，pc1 向 pc2 发消息，pc2 向 pc1 发消息，可以互通了</p><p>对于对称型，两种情况不能打通，需要用到TURN中继</p><table><thead><tr><th></th><th>全锥型</th><th>受限锥型</th><th>端口受限锥型</th><th>对称型</th></tr></thead><tbody><tr><td>全锥型</td><td>YES</td><td>YES</td><td>YES</td><td>YES</td></tr><tr><td>受限锥型</td><td>YES</td><td>YES</td><td>YES</td><td>YES</td></tr><tr><td>端口受限锥型</td><td>YES</td><td>YES</td><td>YES</td><td>NO</td></tr><tr><td>对称型</td><td>YES</td><td>YES</td><td>NO</td><td>NO</td></tr></tbody></table><hr><p>参考资料：</p>',44),_={href:"https://datatracker.ietf.org/doc/html/rfc5389",target:"_blank",rel:"noopener noreferrer"};function S(N,E){const a=s("ExternalLinkIcon");return r(),i("div",null,[u,e("ol",null,[e("li",null,[e("a",_,[d("RFC 5389 - Session Traversal Utilities for NAT (STUN)"),n(a)])])])])}const x=t(b,[["render",S],["__file","STUN.html.vue"]]);export{x as default};
